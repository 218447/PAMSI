#include "tab.hh"

template <class T> Tablica<T>::Tablica (const int &rozmiar) {
  wielkosc=rozmiar;
  zajete=0;
  tab=new T[rozmiar];
}
template <class T> Tablica<T>::Tablica() {
  wielkosc=10;
  zajete=0;
  tab=new T[wielkosc];
}
template <class T> Tablica<T>::Tablica (const Tablica & tabl) {
  tab=new T[wielkosc];
  memcpy (tab, tabl.tab, wielkosc);
}
  

template <class T> Tablica<T>::~Tablica () {
  delete []tab;
}
template <class T> void Tablica<T>::Wyczysc () {
  delete []tab;
  T* nowaTab = new T[10];
  tab= nowaTab;
}
template <class T> void Tablica<T>::dodajElem (const T &elem) {
  ++zajete;
  if (zajete>wielkosc) {
    T* nowaTab = new T[zajete];
    wielkosc++;
    for (int i=0; i<=(zajete-2); i++) {
      nowaTab[i] = tab[i];
    }		
    nowaTab [zajete-1]=elem;

    delete []tab;
    tab = nowaTab;
  } else tab [zajete-1] = elem;
}
template <class T> void Tablica<T>::dodajElemPlus (const T &elem) {
  ++zajete;
  if (zajete>wielkosc) {
    T* nowaTab = new T[zajete+100];
    wielkosc+=100;
    for (int i=0; i<=(zajete-2); i++) {
      nowaTab[i] = tab[i];
    }
    nowaTab [zajete-1]=elem;
    delete []tab;
    tab = nowaTab;
  } else tab [zajete-1] = elem;
}
template <class T> void Tablica<T>::dodajElemRazy (const T &elem) {
  ++zajete;
  if (zajete>wielkosc) {
    T* nowaTab = new T[zajete*2];
    wielkosc*=2;
    for (int i=0; i<=(zajete-2); i++) {
      nowaTab[i] = tab[i];
    }
    nowaTab [zajete-1]=elem;
    delete []tab;
    tab = nowaTab;
  } else tab [zajete-1] = elem;
}
template <class T> int Tablica<T>::rozmiar() {
    return wielkosc;
  }

template <class T> void Tablica<T>::dodaj (T element, int miejsce) {
  ++zajete;
    T* nowaTab = new T[wielkosc+1];
    wielkosc+=1;
    for (int i=0; i<(miejsce-1); i++) {
      nowaTab[i] = tab[i];
    }
    nowaTab(miejsce-1)=element;
    for (int i=(miejsce); i<wielkosc; i++) {
      int k=miejsce-1;
      nowaTab[i]=tab[k];
      ++k;
    }
    delete []tab;
    tab = nowaTab;
}
template <class T> void Tablica <T>::usun (int miejsce) {
  --zajete;
    T* nowaTab = new T[wielkosc-1];
    wielkosc-=1;
    for (int i=0; i<(miejsce-1); i++) {
      nowaTab[i] = tab[i];
    }
   for (int i=(miejsce-1); i<wielkosc; i++) {
      int k=miejsce;
      nowaTab[i]=tab[k];
      ++k;
    }
    delete []tab;
    tab = nowaTab;
}
template <class T> T Tablica <T>::wyswietl (int miejsce) {
  return tab[miejsce];
}
